stm.insert.header=insert into <schema>.transaction_header\
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSTYPE,\
  NUMSTRING,OPERATOR,GROSSPOS,GROSSNEG,\
  RINGTIME,TENDERTIME,SPECIALTIME,INACTIVETIME,\
  INDICAT1_BIT0,INDICAT1_BIT1,INDICAT1_BIT2,INDICAT1_BIT3,INDICAT1_BIT4,\
  INDICAT1_BIT5,INDICAT1_BIT6,INDICAT1_BIT7,INDICAT1_BIT8,INDICAT1_BIT9,\
  INDICAT1_BIT10,INDICAT1_BIT11,INDICAT1_BIT12,INDICAT1_BIT13,INDICAT1_BIT14,\
  INDICAT1_BIT15,INDICAT1_BIT16,INDICAT1_BIT17,INDICAT1_BIT18,INDICAT1_BIT19,\
  INDICAT1_BIT20,INDICAT1_BIT21,INDICAT1_BIT22,INDICAT1_BIT23,INDICAT1_BIT24,\
  INDICAT1_BIT25,INDICAT1_BIT26,INDICAT1_BIT27,INDICAT1_BIT28,INDICAT1_BIT29,\
  INDICAT1_BIT30,INDICAT1_BIT31,\
  POSTEDDATE,VALIDATED,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,\
  ?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,\
  ?,?,?)

stm.insert.item.entry=insert into <schema>.item_entry\
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  ITEMCODE, XPRICE, DEPARTME,FAMILYNUMBER,\
  INDICAT1_BIT0,INDICAT1_BIT1,INDICAT1_BIT2,INDICAT1_BIT3,INDICAT1_BIT4,\
  INDICAT1_BIT5,INDICAT1_BIT6,INDICAT1_BIT7,INDICAT1_BIT8,INDICAT1_BIT9,\
  INDICAT1_BIT10,INDICAT1_BIT11,INDICAT1_BIT12,INDICAT1_BIT13,INDICAT1_BIT14,\
  INDICAT1_BIT15,\
  INDICAT2_BIT0,INDICAT2_BIT1,INDICAT2_BIT2,INDICAT2_BIT3,INDICAT2_BIT4,\
  INDICAT2_BIT5,INDICAT2_BIT6,INDICAT2_BIT7,INDICAT2_BIT8,INDICAT2_BIT9,\
  INDICAT2_BIT10,INDICAT2_BIT11,INDICAT2_BIT12,INDICAT2_BIT13,INDICAT2_BIT14,\
  INDICAT2_BIT15,\
  INDICAT3_DIGIT1,INDICAT3_DIGIT2,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?, \
  ?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,\
  ?,?,?)

stm.insert.store.totals=insert into <schema>.controltotal\
  (STORE,TRANSDATE,TOTALTYPE,TOTALVALUE) \
  VALUES (?,?,?,?)

stm.insert.item.entry.ext=insert into <schema>.item_entry_extension\
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,PARENTTRANSSEQUENCE,\
  MPGROUP, DEALQTY,PRICEMETHOD,\
  SALEQTY,SALEPRICE,QTYORWGT,\
  INDICAT1_BIT0,INDICAT1_BIT1,INDICAT1_BIT2,INDICAT1_BIT3,INDICAT1_BIT4,\
  INDICAT1_BIT5,INDICAT1_BIT6,INDICAT1_BIT7,INDICAT1_BIT8,SOURCE) \
  VALUES(?,?,?,?,?,?,\
  ?,?,?,\
  ?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?)

stm.insert.discount=insert into <schema>.discount\
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  TYPE,DISGROUP,DISRATE,AMTDISCO,TAXEXEMP,SOURCE) \
  VALUES (?,?,?,?,?,?,\
  ?,?,?,?,?)

stm.insert.tender=insert into <schema>.tender \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  TYPE,TENDTYPE,AMTTENDER,AMTTNDFEE,CUSTOMER,STATUS,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,?,?,?)

stm.insert.tax=insert into <schema>.tax \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  TYPE,AMTTAXA,AMTTAXB,AMTTAXC,AMTTAXD,\
  AMTSALEA,AMTSALEB,AMTSALEC,AMTSALED,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?)

stm.insert.food.stamp=insert into <schema>.food_stamp_change \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  TENDTYPE,AMTCHANGE,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?)

stm.insert.manager.override=insert into <schema>.manager_override \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  OVERRIDE,REASON,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?)

stm.insert.data.entry=insert into <schema>.data_entry \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  DATA1,DATA2,DATA3,DATA4,DATA5,\
  DATA6,DATA7,DATA8,DATA9,DATA10,\
  ADITIONALDATA,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?)

stm.insert.price.change=insert into <schema>.price_change \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  ITEMCODE,NEWDEALQTY,NEWPRICE,OLDDEALQTY,OLDPRICE,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,?,?)

stm.insert.till.change=insert into <schema>.till_change \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  NUMLOANS,AMTLOANS,NUMPKUPS,AMTPKUPS,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,?)

stm.insert.till.change.values=insert into <schema>.till_change_values \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,TILLSEQUENCE,\
  TENDTYPE,AMTTEND,SOURCE) \
  VALUES (?,?,?,?,?,?,\
  ?,?,?)

stm.insert.item.record.change=insert into <schema>.item_record_change \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE, \
  OLDDATA,NEWDATA,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?)

stm.insert.trading.stamps=insert into <schema>.trading_stamps \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  STAMPS,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?)

stm.insert.tender.item=insert into <schema>.tender_item\
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  ITEMCODE, XPRICE, DEPARTME,FAMILYNUMBER,\
  INDICAT1_BIT0,INDICAT1_BIT1,INDICAT1_BIT2,INDICAT1_BIT3,INDICAT1_BIT4,\
  INDICAT1_BIT5,INDICAT1_BIT6,INDICAT1_BIT7,INDICAT1_BIT8,INDICAT1_BIT9,\
  INDICAT1_BIT10,INDICAT1_BIT11,INDICAT1_BIT12,INDICAT1_BIT13,INDICAT1_BIT14,\
  INDICAT1_BIT15,\
  INDICAT2_BIT0,INDICAT2_BIT1,INDICAT2_BIT2,INDICAT2_BIT3,INDICAT2_BIT4,\
  INDICAT2_BIT5,INDICAT2_BIT6,INDICAT2_BIT7,INDICAT2_BIT8,INDICAT2_BIT9,\
  INDICAT2_BIT10,INDICAT2_BIT11,INDICAT2_BIT12,INDICAT2_BIT13,INDICAT2_BIT14,\
  INDICAT2_BIT15,\
  INDICAT3_DIGIT1,INDICAT3_DIGIT2,TENDTYPE,SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,\
  ?,?,?,?)

stm.insert.exception.log=insert into <schema>.exception_log \
  (STORE,TERMINAL,TRANSNUM,TRANSDATE, \
  DATA1,DATA2,DATA3,DATA4,LOGSEQUENCE) \
  VALUES (?,?,?,?,\
  ?,?,?,?,?)

stm.insert.store.closing=insert into <schema>.store_closing \
  (STORE,TRANSDATE, \
  INDICAT1,\
  INDICAT2_BIT0,INDICAT2_BIT1,INDICAT2_BIT2,INDICAT2_BIT3,\
  INDICAT2_BIT4,INDICAT2_BIT5,INDICAT2_BIT6,INDICAT2_BIT7) \
  VALUES (?,?,\
  ?,\
  ?,?,?,?,\
  ?,?,?,?)

stm.insert.user.data=insert into <schema>.user_data\
  (STORE,TERMINAL,TRANSNUM,TRANSDATE,TRANSSEQUENCE,\
  DATA1,DATA2,DATA3,DATA4,DATA5,\
  DATA6,DATA7,DATA8,DATA9,DATA10,\
  SOURCE) \
  VALUES (?,?,?,?,?,\
  ?,?,?,?,?,\
  ?,?,?,?,?,\
  ?)

stm.merge.file.state=MERGE INTO <schema>.file_state dst \
  USING (VALUES(CAST(? AS SMALLINT), CAST(? AS SMALLINT), CAST(? AS DATE), CAST(? AS SMALLINT))) src \
  (file_name, store, transdate, file_state) \
  ON dst.store = src.store AND dst.transdate = src.transdate \
  WHEN MATCHED AND (dst.file_state < src.file_state) THEN UPDATE SET dst.file_state = src.file_state \
  WHEN NOT MATCHED THEN INSERT (file_name, store, transdate, received_date, file_state) \
  VALUES (src.file_name, src.store, src.transdate, CURRENT TIMESTAMP, src.file_state)

stm.merge.file.state.sources=MERGE INTO <schema>.file_state_sources dst \
  USING (VALUES(CAST(? AS SMALLINT), CAST(? AS SMALLINT), CAST(? AS DATE), CAST(? AS SMALLINT))) src \
  (source_id, store, transdate, file_state) \
  ON dst.source_id = src.source_id AND dst.store = src.store AND dst.transdate = src.transdate \
  WHEN MATCHED AND (dst.file_state < src.file_state) THEN UPDATE SET dst.file_state = src.file_state \
  WHEN NOT MATCHED THEN INSERT (source_id, store, transdate, received_date, file_state) \
  VALUES (src.source_id, src.store, src.transdate, CURRENT TIMESTAMP, src.file_state)

stm.insert.transaction.issues=INSERT INTO TLCLIN.transaction_issues \
  (accounting_date_key, store_id, terminal, transaction_number, severity, message, processed_time, subtype) \
  VALUES (?, ?, ?, ?, ?, ?, CURRENT TIMESTAMP, ?)

stm.merge.transaction.audit=MERGE INTO TLCLIN.transactions_audit ta \
  USING (VALUES(CAST(? AS INTEGER), CAST(? AS SMALLINT), CAST(? AS SMALLINT), CAST(? AS INTEGER), CAST(? AS TIMESTAMP), CAST(? AS SMALLINT), CAST(? AS SMALLINT), CAST(? AS INTEGER))) src \
  (accounting_date_key, store_id, terminal, transaction_number, transaction_time, transaction_type_code, system_src_code, net_amount) \
  ON ta.accounting_date_key = src.accounting_date_key AND ta.store_id = src.store_id AND ta.terminal = src.terminal AND ta.transaction_number = src.transaction_number \
  WHEN MATCHED THEN UPDATE SET \
  classic_dst_time = CURRENT TIMESTAMP, \
  last_updated_time = CURRENT TIMESTAMP \
  WHEN NOT MATCHED THEN INSERT (accounting_date_key, store_id, terminal, transaction_number, transaction_time, \
  transaction_type_code, system_src_code, net_amount, last_updated_time, classic_dst_time) \
  VALUES (src.accounting_date_key, src.store_id, src.terminal, src.transaction_number, src.transaction_time, \
  src.transaction_type_code, src.system_src_code, src.net_amount, CURRENT TIMESTAMP, CURRENT TIMESTAMP)
